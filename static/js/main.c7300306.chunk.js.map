{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","console","log","sort","prevGood","nextGood","LENGTH","length","ALPABET","localeCompare","reverse","App","state","NONE","setState","sortByName","sortByLength","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmBK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAqBzB,OAjBAI,QAAQC,IAAIJ,EAAUC,GAEtBC,EAAaG,MAAK,SAACC,EAAUC,GAC3B,OAAQP,GACN,KAAKJ,EAASY,OACZ,OAAOF,EAASG,OAASF,EAASE,OACpC,KAAKb,EAASc,QACZ,OAAOJ,EAASK,cAAcJ,GAChC,QACE,OAAO,MAITN,GACFC,EAAaU,UAGRV,G,SA1CJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAmDE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEH,QAAU,WACR,EAAKI,UAAS,SAAAF,GAAK,MAAK,CACtBb,YAAaa,EAAMb,gBARzB,EAYEgB,WAAa,WACX,EAAKD,SAAS,CAAEhB,SAAUJ,EAASc,WAbvC,EAgBEQ,aAAe,WACb,EAAKF,SAAS,CAAEhB,SAAUJ,EAASY,UAjBvC,EAoBEW,MAAQ,WACN,EAAKH,SAAS,CACZhB,SAAUJ,EAASmB,KACnBd,YAAY,KAvBlB,4CA2BE,WACE,MAAiCmB,KAAKN,MAA9Bd,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAEhBgB,EAIEG,KAJFH,WACAC,EAGEE,KAHFF,aACAN,EAEEQ,KAFFR,QACAO,EACEC,KADFD,MAGF,OAEE,sBAAKE,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACErB,IAAaJ,EAASc,QAClB,0BACA,iBAENa,QAASN,EAPX,iCAYA,wBACEK,KAAK,SACLD,UACErB,IAAaJ,EAASY,OAClB,6BACA,oBAENe,QAASL,EAPX,4BAYA,wBACEI,KAAK,SACLD,WACiB,IAAfpB,EACI,6BACA,oBAENsB,QAASX,EAPX,sBAYEZ,IAAaJ,EAASmB,OAAuB,IAAfd,IAE5B,wBACEqB,KAAK,SACLD,UAAU,4BACVE,QAASJ,EAHX,sBASN,6BACE,6BACGrB,EAAkBD,EAAiBuB,KAAKN,OACtCU,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAAoBA,kBA1F/C,GAAyBC,IAAMC,WCjE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c7300306.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((prevGood, nextGood) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return prevGood.length - nextGood.length;\n      case SortType.ALPABET:\n        return prevGood.localeCompare(nextGood);\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByName = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const {\n      sortByName,\n      sortByLength,\n      reverse,\n      reset,\n    } = this;\n\n    return (\n\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              sortType !== SortType.ALPABET\n                ? 'button is-info is-light'\n                : 'button is-info'\n            }\n            onClick={sortByName}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              sortType !== SortType.LENGTH\n                ? 'button is-success is-light'\n                : 'button is-success'\n            }\n            onClick={sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              isReversed !== true\n                ? 'button is-warning is-light'\n                : 'button is-warning'\n            }\n            onClick={reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed === true)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state)\n              .map(good => <li data-cy=\"Good\">{good}</li>)}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}